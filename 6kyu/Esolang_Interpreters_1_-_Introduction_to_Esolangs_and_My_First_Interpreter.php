<?php

include_once __DIR__.'/../vendor/autoload.php';
use PHPUnit\Framework\TestCase;

function my_first_interpreter(string $code): string {
    $cell = 0;
    $out = '';
    for ($i = 0; $i < strlen($code); $i++) {
        switch ($code[$i]) {
            case '+':
                $cell++;
                if ($cell > 255) $cell = 0;
                break;
            case '.':
                $out .= chr($cell);
                break;
        }
    }
    return $out;
}


class MyFirstInterpreterTest extends TestCase {
    public function testDescriptionExamples() {
        // Allow either of the function names mentioned in the Description as the name of the user solution (code interpreter)
        $user_solution = function_exists('my_first_interpreter') ? 'my_first_interpreter' : (function_exists('mini_string_fuck') ? 'mini_string_fuck' : 'interpreter');
        // Hello World Program - outputs the string "Hello, World!"
        $this->assertEquals("Hello, World!", $user_solution
        // Outputs the uppercase English alphabet
        $this->assertEquals("ABCDEFGHIJKLMNOPQRSTUVWXYZ", $user_solution("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+."));
    }
}

$t = new MyFirstInterpreterTest();
$t->testDescriptionExamples();

